Question:1
class InvalidMonthException
{
	public InvalidMonthException()
	{
		System.out.println("Invalid Month Given");
	}
}
class InvalidDayException extends Exception
{
	public InvalidDayException()
	{
		System.out.println("Invalid Date Given");
	}
}
class Slip21
{
	public static void main(string args[])
	{
		try
	}
	if(args,length<3) throw new InvalidMonthException;
	switch(MM)
	{
		case1:	case20:	case5:	case:7
		case8:	case10:	case12:
			if(dd < 1 && dd < 31) throw new InvalidDayException();
		break;
		case6:	case9:	case11:
			if(dd < 1 // dd < 30) throw new InvalidDayException();
		break;
		case2:
			if(leap && dd > 20) throw new InvalidDayException();
		break;
	}
	System.out.println("Valid Input");
	{
	}
	catch(InvalidDayException e)
	{
	}
	catch(InvalidMonthException e)
	{
	}
	catch(NullPointerException e)
	{
		System.out.println("Error"+e);
	}
}



Question:2
class Employee
{
	int empid,salary;
	String name,dept;
	Static int cnt=0;
	public Employee()
	{
		cnt++;
	}
	public Employee(int empid,String name,String dept,int salary)
	{
		this.empid=empid;
		this.name=name;
		this.dept=dept;
		this.salary=salary;
		cnt++;
	}
	public String toString()
	{
		return "empid:"+empid+ "Name: "+name+" Dept: "+dept+" salary: "+salary;
	}
class Slip21
{
	public static void main(String args[])
	{
		Employee e1=new Employee(1,"AAAA","Computer",20000);
		System.out.println("No. of Objects="+Employee.cnt);
		System.out.println(e1);

		Employee e2=new Employee(2,"BBBB","Computer",25000);
		System.out.println("No. of Objects="+Employee.cnt);
		System.out.println(e2);

		Employee e3=new Employee(3,"CCCC","Math",21000);
		System.out.println("No. of Objects="+Employee.cnt);
		System.out.println(e3);
		
		Employee e4=new Employee(4,"DDDD","Commerce",30000);
		System.out.println("No. of Objects="+Employee.cnt);
		System.out.println(e4);
	}
}
			